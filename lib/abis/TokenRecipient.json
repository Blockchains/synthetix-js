{
  "contractName": "TokenRecipient",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "havvenTokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060a38061001f6000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663cbff5d9681146043575b600080fd5b348015604e57600080fd5b50607173ffffffffffffffffffffffffffffffffffffffff600435166024356073565b005b50505600a165627a7a72305820fc3756f0bfff7628dcb50b2908aa5606373c3926861403a58a4340928f7372f30029",
  "deployedBytecode": "0x608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663cbff5d9681146043575b600080fd5b348015604e57600080fd5b50607173ffffffffffffffffffffffffffffffffffffffff600435166024356073565b005b50505600a165627a7a72305820fc3756f0bfff7628dcb50b2908aa5606373c3926861403a58a4340928f7372f30029",
  "sourceMap": "802:1220:18:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;802:1220:18;;;;;;;",
  "deployedSourceMap": "802:1220:18:-;;;;;;;;;;;;;;;;;;;;;;;1256:764;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1256:764:18;;;;;;;;;;;;;;:::o",
  "source": "/*\n-----------------------------------------------------------------\nFILE INFORMATION\n-----------------------------------------------------------------\n\nfile:       TokenRecipient.sol\nversion:    1.0\nauthor:     Kevin Brown\ndate:       2018-08-02\n\n-----------------------------------------------------------------\nMODULE DESCRIPTION\n-----------------------------------------------------------------\n\nAn example contract which gets notified when Havvens or Nomins are\ntransferred to it.\n\nYou can implement the havvenTokenFallback function in your contracts to \ntake action when you receive Havvens or Nomins.\n\n-----------------------------------------------------------------\n*/\n\npragma solidity 0.4.24;\n\n /*\n * Contract that is working with Havvens or Nomins that wants to be notified on transfers\n */\ncontract TokenRecipient {\n    /**\n\t * @notice Get notified whenever a havven or nomin token contract transfers tokens to you.\n     * @dev It's important to verify that msg.sender is one of our underlying contracts. If you\n     *      want to know which type of token you're receiving, then implement a switch on msg.sender\n\t * @param from The user who is transferring the tokens to you\n\t * @param value The amount of tokens they're transferring\n\t */\n    function havvenTokenFallback(address from, uint value) public {\n        // You'll need to ensure that msg.sender is one of our contracts and that you're not\n        // just getting a call from somebody directly calling this function.\n        //\n        // IMPORTANT: These addresses WILL change as we update our underlying contracts, so\n        //            we recommend maintaining a whitelist instead of hard coding specific\n        //            values.\n        //\n        // For example:\n        //\n        // mapping(address => bool) public nominAddresses;\n        //\n        // <provide yourself with a way to update the mapping as time goes on>\n        // \n        // Then at the top of this function:\n        // require (nominAddresses[msg.sender]);\n    }\n}",
  "sourcePath": "/Users/clintonennis/Projects/havven/havven/contracts/TokenRecipient.sol",
  "ast": {
    "absolutePath": "/Users/clintonennis/Projects/havven/havven/contracts/TokenRecipient.sol",
    "exportedSymbols": {
      "TokenRecipient": [
        5929
      ]
    },
    "id": 5930,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5920,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "679:23:18"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5929,
        "linearizedBaseContracts": [
          5929
        ],
        "name": "TokenRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5927,
              "nodeType": "Block",
              "src": "1318:702:18",
              "statements": []
            },
            "documentation": "@notice Get notified whenever a havven or nomin token contract transfers tokens to you.\n@dev It's important to verify that msg.sender is one of our underlying contracts. If you\n     want to know which type of token you're receiving, then implement a switch on msg.sender\n@param from The user who is transferring the tokens to you\n@param value The amount of tokens they're transferring",
            "id": 5928,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "havvenTokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5922,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5928,
                  "src": "1285:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5924,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5928,
                  "src": "1299:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5923,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1284:26:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:0:18"
            },
            "scope": 5929,
            "src": "1256:764:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5930,
        "src": "802:1220:18"
      }
    ],
    "src": "679:1343:18"
  },
  "legacyAST": {
    "absolutePath": "/Users/clintonennis/Projects/havven/havven/contracts/TokenRecipient.sol",
    "exportedSymbols": {
      "TokenRecipient": [
        5929
      ]
    },
    "id": 5930,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5920,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "679:23:18"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5929,
        "linearizedBaseContracts": [
          5929
        ],
        "name": "TokenRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5927,
              "nodeType": "Block",
              "src": "1318:702:18",
              "statements": []
            },
            "documentation": "@notice Get notified whenever a havven or nomin token contract transfers tokens to you.\n@dev It's important to verify that msg.sender is one of our underlying contracts. If you\n     want to know which type of token you're receiving, then implement a switch on msg.sender\n@param from The user who is transferring the tokens to you\n@param value The amount of tokens they're transferring",
            "id": 5928,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "havvenTokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5922,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5928,
                  "src": "1285:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5924,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5928,
                  "src": "1299:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5923,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1284:26:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:0:18"
            },
            "scope": 5929,
            "src": "1256:764:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5930,
        "src": "802:1220:18"
      }
    ],
    "src": "679:1343:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0-beta.0",
  "updatedAt": "2018-10-30T18:32:39.613Z"
}